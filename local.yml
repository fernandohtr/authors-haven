services:
  api:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    container_name: authors-api
    restart: always
    volumes:
      - .:/app:z
      - static_volume:/app/src/staticfiles
      - media_volume:/app/src/mediafiles
    expose:
      - 8000
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgresql
    depends_on:
      - postgres
      - mailhog
      - rabbitmq
      - elasticsearch
    command: /start.sh
    networks:
      - authors-api
    stdin_open: true
    tty: true

  postgres:
    build:
      context: .
      dockerfile: ./docker/local/postgresql/Dockerfile
    container_name: authors-postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgresql
    networks:
      - authors-api

  elasticsearch:
    image: elasticsearch:7.17.23
    container_name: authors-elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
    networks:
      - authors-api
    
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: authors-mailhog
    ports:
      - 8025:8025
    networks:
      - authors-api

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: authors-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - authors-api

  celery_worker:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    container_name: authors-celery-worker
    command: /start-celery-worker.sh
    volumes:
      - ./src:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgresql
    depends_on:
      - rabbitmq
      - postgres
      - mailhog
    networks:
      - authors-api

  flower:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    container_name: authors-flower
    command: /start-flower.sh
    volumes:
      - flower_data:/data
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgresql
    ports:
      - 5555:5555
    depends_on:
      - celery_worker
      - postgres
      - rabbitmq
    networks:
      - authors-api

  nginx:
    build:
      context: ./docker/local/nginx/
      dockerfile: Dockerfile
    container_name: authors-nginx
    restart: always
    ports:
      - 8080:80
    depends_on:
      - api
    volumes:
      - static_volume:/app/src/staticfiles
      - media_volume:/app/src/mediafiles
    networks:
      - authors-api

networks:
  authors-api:
    driver: bridge

volumes:
      static_volume:
      media_volume:
      local_postgres_data: {}
      local_postgres_data_backups: {}
      flower_data: {}
